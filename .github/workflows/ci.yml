name: deploy to production

on:
  push:

jobs:
  black:
    name: Black
    runs-on: ubuntu-latest
    container: python:3.10
    steps:
      - name: Checkout the latest code
        uses: actions/checkout@v3
      - name: Install black
        run: pip install black
      - name: Checking...
        run: black --check .

  flake8:
    name: Flake8
    runs-on: ubuntu-latest
    container: python:3.10
    steps:
      - name: Checkout the latest code
        uses: actions/checkout@v3
      - name: Install flake8
        run: pip install flake8
      - name: Run flake8
        run: flake8 . --max-line-length=101

  isort:
    name: Isort
    runs-on: ubuntu-latest
    container: python:3.10
    steps:
      - name: Checkout the latest code
        uses: actions/checkout@v3
      - name: Install isort
        run: pip install isort
      - name: Run isort
        run: isort . --check

  tests:
    name: Tests
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - "5432:5432"

    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
          architecture: x64
      - name: Checkout the latest code
        uses: actions/checkout@v3
      - name: Install dependency
        run: |
          pip install --upgrade pip poetry
          poetry config virtualenvs.create false
          poetry install --no-dev
      - name: Install Chromium
        uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: beta
      - name: Setup Database
        run: psql -h 0.0.0.0 -U postgres -c 'CREATE TABLE IF NOT EXISTS whois(
                                              id SERIAL PRIMARY KEY,
                                              ip INET,
                                              url VARCHAR(256),
                                              country VARCHAR(50),
                                              city VARCHAR(100),
                                              organization VARCHAR(100));'
      - name: Run tests
        run: pytest -c pyproject.toml


