name: deploy to production

on:
  push:

jobs:
  black:
    name: Black
    runs-on: ubuntu-latest
    container: python:3.10
    steps:
      - name: Checkout the latest code
        uses: actions/checkout@v3
      - name: Install black
        run: pip install black
      - name: Checking...
        run: black --check .

  flake8:
    name: Flake8
    runs-on: ubuntu-latest
    container: python:3.10
    steps:
      - name: Checkout the latest code
        uses: actions/checkout@v3
      - name: Install flake8
        run: pip install flake8
      - name: Run flake8
        run: flake8 . --max-line-length=101

  isort:
    name: Isort
    runs-on: ubuntu-latest
    container: python:3.10
    steps:
      - name: Checkout the latest code
        uses: actions/checkout@v3
      - name: Install isort
        run: pip install isort
      - name: Run isort
        run: isort . --check

  tests:
    name: Tests
    runs-on: ubuntu-latest
    env:
      API_TOKEN: '${{ secrets.API_TOKEN }}'
      ADMIN: '${{ secrets.ADMIN }}'
      PG_NAME: '${{ secrets.PG_NAME }}'
      PG_USER: '${{ secrets.PG_USER }}'
      PG_PASSWORD: '${{ secrets.PG_PASSWORD }}'
      PG_HOST: '${{ secrets.PG_HOST }}'
      PG_PORT: '${{ secrets.PG_PORT }}'
      POSTGRES_PASSWORD: '${{ secrets.POSTGRES_PASSWORD }}'
      POSTGRES_USER: '${{ secrets.POSTGRES_USER }}'
      POSTGRES_DB: '${{ secrets.POSTGRES_DB }}'

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${ secrets.POSTGRES_PASSWORD }
          POSTGRES_USER: ${ secrets.POSTGRES_USER }
          POSTGRES_DB: ${ secrets.POSTGRES_DB }
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
          architecture: x64
      - name: Checkout the latest code
        uses: actions/checkout@v3
      - name: Install dependency
        run: |
          pip install --upgrade pip poetry
          poetry config virtualenvs.create false
          poetry install --no-dev
      - name: Install Chromium
        uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: beta
      - name: Run tests
        run: pytest -c pyproject.toml




